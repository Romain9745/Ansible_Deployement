name: Build and Push Docker Backend Image to GitHub Container Registry

on:
  push:
    branches:
      - add_ansible_script
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-push-docker-backend-image:
    runs-on: ubuntu-latest
    environment: Docker_build

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker backend image
        uses: docker/build-push-action@v4
        with:
          context: app/backend
          file: app/backend/Dockerfile  # Specify the Dockerfile path here
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/backend-library:latest
    
  build-and-push-docker-frontend-image:
    runs-on: ubuntu-latest
    environment: Docker_build

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker backend image
        uses: docker/build-push-action@v4
        with:
          context: app/frontend/library_manager
          file: app/frontend/library_manager/Dockerfile  # Specify the Dockerfile path here
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/frontend-library:latest
  
  deploy-ansible:
    needs: [build-and-push-docker-backend-image, build-and-push-docker-frontend-image]
    runs-on: ubuntu-latest
    environment: Ansible_deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible
    
    - name: Set ANSIBLE_CONFIG environment variable
      run: echo "ANSIBLE_CONFIG=ansible/ansible.cfg" >> $GITHUB_ENV

    - name: Deploy with Ansible
      env:
        ANSIBLE_HOST_KEY_CHECKING: "false"
        ANSIBLE_STDOUT_CALLBACK: "debug"
      run: |
        echo "[remote-server]" > hosts
        echo "${{ secrets.REMOTE_SERVER_IP }} ansible_port=${{ secrets.SSH_PORT }} ansible_user=${{ secrets.SSH_USER }} ansible_password=${{ secrets.SSH_PASSWORD }}" >> hosts
        ansible-playbook -i hosts ansible/playbook.yml -v